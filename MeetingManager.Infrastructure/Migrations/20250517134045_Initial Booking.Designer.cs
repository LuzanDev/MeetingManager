// <auto-generated />
using System;
using MeetingManager.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeetingManager.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250517134045_Initial Booking")]
    partial class InitialBooking
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeetingManager.Domain.Entity.Booking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BookedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Booking");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BookedBy = "Alex Martyn",
                            EndTime = new DateTime(2025, 5, 14, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 1L,
                            StartTime = new DateTime(2025, 5, 14, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            BookedBy = "Maksym Luzan",
                            EndTime = new DateTime(2025, 5, 11, 11, 15, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 3L,
                            StartTime = new DateTime(2025, 5, 11, 9, 15, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            BookedBy = "Oksana Orlova",
                            EndTime = new DateTime(2025, 5, 17, 23, 15, 0, 0, DateTimeKind.Unspecified),
                            RoomId = 2L,
                            StartTime = new DateTime(2025, 5, 17, 21, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MeetingManager.Domain.Entity.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Capacity = 10,
                            Name = "Small Room"
                        },
                        new
                        {
                            Id = 2L,
                            Capacity = 25,
                            Name = "Medium Room"
                        },
                        new
                        {
                            Id = 3L,
                            Capacity = 50,
                            Name = "Large Room"
                        });
                });

            modelBuilder.Entity("MeetingManager.Domain.Entity.Booking", b =>
                {
                    b.HasOne("MeetingManager.Domain.Entity.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
